{"ast":null,"code":"var _jsxFileName = \"/Users/chae/Dev/Git/2023-Capstone/world-tone-web/src/components/train/AudioRecord.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { AudioRecorder, useAudioRecorder } from \"react-audio-voice-recorder\";\nimport styled from \"styled-components\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\"; // react-speech-recognition 라이브러리 추가\nimport { scripts } from \"../../data/scripts\";\nimport { train_voice } from \"../../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledAudio = styled.div`\n  position: relative;\n  height: 300px;\n  .record-detail {\n    display: none;\n    position: absolute;\n    left: 50%;\n    top: 60%;\n    transform: translateX(-50%);\n  }\n  .record {\n    .mic-img {\n      position: absolute;\n      left: 50%;\n      top: 40%;\n      transform: translateX(-50%) translateY(-50%);\n      width: 90px;\n      height: 90px;\n    }\n    .record-detail {\n      position: absolute;\n      left: 50%;\n      top: 60%;\n      transform: translateX(-50%);\n    }\n  }\n\n  .stage {\n    position: absolute;\n    left: 50%;\n    bottom: 0%;\n    transform: translateX(-50%);\n    img {\n      width: 223.68px;\n      height: 55.6px;\n    }\n    img:active {\n      transform: scale(0.9);\n    }\n  }\n`;\n_c = StyledAudio;\nconst AudioRecord = ({\n  stage,\n  setStage\n}) => {\n  _s();\n  const [recordedAudios, setRecordedAudios] = useState([]);\n  const recorderControls = useAudioRecorder();\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n  const [audioFile, setAudioFile] = useState();\n  const recordAudio = blob => {\n    const fileName = \"recorded_audio\" + stage + \".wav\";\n    if (blob) {\n      console.log(\"create file\");\n      setAudioFile(blobToFile({\n        blob,\n        fileName\n      }));\n    }\n  };\n  const blobToFile = ({\n    blob,\n    fileName\n  }) => {\n    const file = new File([blob], fileName, {\n      type: blob.type,\n      lastModified: Date.now()\n    });\n    return file;\n  };\n  const startChecking = () => {\n    // 녹음 시작\n    recorderControls.startRecording();\n\n    // STT 시작\n    resetTranscript(); // 이전 텍스트 초기화\n    SpeechRecognition.startListening(); // 음성 인식 시작\n  };\n\n  const stopChecking = () => {\n    // STT 끝\n    SpeechRecognition.stopListening();\n    // 녹음 끝\n    recorderControls.stopRecording();\n    console.log(\"transcript : \", transcript);\n    if (!compareTexts(transcript)) {\n      alert(\"정확한 발음으로 따라해주세요. 사용자의 음성 추출을 위해 중요한 과정이랍니다~\");\n      alert(\"추출 결과 : \" + transcript);\n    }\n  };\n\n  // 두 문자열을 전처리하여 띄어쓰기와 문장 부호를 제거한 후 비교\n  function compareTexts(transcript) {\n    // 띄어쓰기와 문장 부호를 제거하고 모든 문자를 소문자로 변환\n    const cleanSttText = transcript.replace(/[\\s.,!?]/g, \"\").toLowerCase();\n    const actualText = scripts[stage - 1];\n    const cleanActualText = actualText.replace(/[\\s.,!?]/g, \"\").toLowerCase();\n    console.log(\"stt : \", cleanSttText);\n    console.log(\"actual : \", cleanActualText);\n    // 전처리한 문자열을 비교\n    return cleanSttText === cleanActualText;\n  }\n  const handleNextClick = async () => {\n    console.log(\"stage : \" + stage);\n    if (compareTexts(transcript)) {\n      await addAudio();\n      setStage(stage + 1);\n      setAudioFile(undefined);\n    }\n    console.log(\"recorded audios : \", recordedAudios);\n  };\n  const submitFiles = async () => {\n    const formData = new FormData();\n    console.log(\"recordedAudios len : \" + recordedAudios.length);\n    recordedAudios.forEach(file => {\n      // 파일 데이터 저장\n      formData.append(\"voiceFiles\", file);\n    });\n    train_voice(formData);\n  };\n  const addAudio = async () => {\n    console.log(\"add audio\");\n    if (audioFile) {\n      await setRecordedAudios(prevAudios => [...prevAudios, audioFile]);\n    }\n    console.log(\"recordidAudios in addAudio : \", recordedAudios);\n  };\n  return /*#__PURE__*/_jsxDEV(StyledAudio, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"record-detail\",\n      children: /*#__PURE__*/_jsxDEV(AudioRecorder, {\n        onRecordingComplete: blob => recordAudio(blob),\n        recorderControls: recorderControls\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stage\",\n      onClick: () => submitFiles(),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icon/submit.png\",\n        alt: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecord, \"0d8NSgrMF4OCFaNZtP8U43EgBCE=\", false, function () {\n  return [useAudioRecorder, useSpeechRecognition];\n});\n_c2 = AudioRecord;\nexport default AudioRecord;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledAudio\");\n$RefreshReg$(_c2, \"AudioRecord\");","map":{"version":3,"names":["React","useState","AudioRecorder","useAudioRecorder","styled","SpeechRecognition","useSpeechRecognition","scripts","train_voice","jsxDEV","_jsxDEV","StyledAudio","div","_c","AudioRecord","stage","setStage","_s","recordedAudios","setRecordedAudios","recorderControls","transcript","resetTranscript","audioFile","setAudioFile","recordAudio","blob","fileName","console","log","blobToFile","file","File","type","lastModified","Date","now","startChecking","startRecording","startListening","stopChecking","stopListening","stopRecording","compareTexts","alert","cleanSttText","replace","toLowerCase","actualText","cleanActualText","handleNextClick","addAudio","undefined","submitFiles","formData","FormData","length","forEach","append","prevAudios","children","className","onRecordingComplete","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c2","$RefreshReg$"],"sources":["/Users/chae/Dev/Git/2023-Capstone/world-tone-web/src/components/train/AudioRecord.tsx"],"sourcesContent":["import React, { ReactNode, useEffect, useState } from \"react\";\nimport { AudioRecorder, useAudioRecorder } from \"react-audio-voice-recorder\";\nimport styled from \"styled-components\";\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\"; // react-speech-recognition 라이브러리 추가\nimport { scripts } from \"../../data/scripts\";\nimport { train_voice } from \"../../lib/api\";\n\nconst StyledAudio = styled.div`\n  position: relative;\n  height: 300px;\n  .record-detail {\n    display: none;\n    position: absolute;\n    left: 50%;\n    top: 60%;\n    transform: translateX(-50%);\n  }\n  .record {\n    .mic-img {\n      position: absolute;\n      left: 50%;\n      top: 40%;\n      transform: translateX(-50%) translateY(-50%);\n      width: 90px;\n      height: 90px;\n    }\n    .record-detail {\n      position: absolute;\n      left: 50%;\n      top: 60%;\n      transform: translateX(-50%);\n    }\n  }\n\n  .stage {\n    position: absolute;\n    left: 50%;\n    bottom: 0%;\n    transform: translateX(-50%);\n    img {\n      width: 223.68px;\n      height: 55.6px;\n    }\n    img:active {\n      transform: scale(0.9);\n    }\n  }\n`;\nconst AudioRecord = ({\n  stage,\n  setStage,\n}: {\n  stage: number;\n  setStage: React.Dispatch<React.SetStateAction<number>>;\n}) => {\n  const [recordedAudios, setRecordedAudios] = useState<File[]>([]);\n  const recorderControls = useAudioRecorder();\n  const { transcript, resetTranscript } = useSpeechRecognition();\n  const [audioFile, setAudioFile] = useState<File>();\n\n  const recordAudio = (blob: Blob | undefined) => {\n    const fileName = \"recorded_audio\" + stage + \".wav\";\n\n    if (blob) {\n      console.log(\"create file\");\n      setAudioFile(blobToFile({ blob, fileName }));\n    }\n  };\n\n  const blobToFile = ({\n    blob,\n    fileName,\n  }: {\n    blob: Blob;\n    fileName: string;\n  }): File => {\n    const file = new File([blob], fileName, {\n      type: blob.type,\n      lastModified: Date.now(),\n    });\n    return file;\n  };\n\n  const startChecking = (): void => {\n    // 녹음 시작\n    recorderControls.startRecording();\n\n    // STT 시작\n    resetTranscript(); // 이전 텍스트 초기화\n    SpeechRecognition.startListening(); // 음성 인식 시작\n  };\n\n  const stopChecking = (): void => {\n    // STT 끝\n    SpeechRecognition.stopListening();\n    // 녹음 끝\n    recorderControls.stopRecording();\n    console.log(\"transcript : \", transcript);\n    if (!compareTexts(transcript)) {\n      alert(\n        \"정확한 발음으로 따라해주세요. 사용자의 음성 추출을 위해 중요한 과정이랍니다~\"\n      );\n      alert(\"추출 결과 : \" + transcript);\n    }\n  };\n\n  // 두 문자열을 전처리하여 띄어쓰기와 문장 부호를 제거한 후 비교\n  function compareTexts(transcript: string) {\n    // 띄어쓰기와 문장 부호를 제거하고 모든 문자를 소문자로 변환\n    const cleanSttText = transcript.replace(/[\\s.,!?]/g, \"\").toLowerCase();\n    const actualText = scripts[stage - 1];\n    const cleanActualText = actualText.replace(/[\\s.,!?]/g, \"\").toLowerCase();\n    console.log(\"stt : \", cleanSttText);\n    console.log(\"actual : \", cleanActualText);\n    // 전처리한 문자열을 비교\n    return cleanSttText === cleanActualText;\n  }\n\n  const handleNextClick = async () => {\n    console.log(\"stage : \" + stage);\n    if (compareTexts(transcript)) {\n      await addAudio();\n      setStage(stage + 1);\n      setAudioFile(undefined);\n    }\n    console.log(\"recorded audios : \", recordedAudios);\n  };\n  const submitFiles = async () => {\n    const formData = new FormData();\n    console.log(\"recordedAudios len : \" + recordedAudios.length);\n    recordedAudios.forEach((file) => {\n      // 파일 데이터 저장\n      formData.append(\"voiceFiles\", file);\n    });\n\n    train_voice(formData);\n  };\n\n  const addAudio = async () => {\n    console.log(\"add audio\");\n    if (audioFile) {\n      await setRecordedAudios((prevAudios) => [...prevAudios, audioFile]);\n    }\n    console.log(\"recordidAudios in addAudio : \", recordedAudios);\n  };\n\n  return (\n    <StyledAudio>\n      <div className=\"record-detail\">\n        <AudioRecorder\n          onRecordingComplete={(blob) => recordAudio(blob)}\n          recorderControls={recorderControls}\n        />\n      </div>\n\n      {/* <div>{transcript}</div>\n      {recordedAudios.length} */}\n      {/* {stage < 11 ? (\n        <>\n          {recorderControls.isRecording ? (\n            <div className=\"record\" onClick={() => stopChecking()}>\n              <img className=\"mic-img\" src=\"/icon/stop.png\" alt=\"stop\"></img>\n            </div>\n          ) : (\n            <div className=\"record\" onClick={() => startChecking()}>\n              <img className=\"mic-img\" src=\"/icon/mic.png\" alt=\"mic\"></img>\n            </div>\n          )}\n          <div className=\"stage\" onClick={() => handleNextClick()}>\n            <img src=\"/icon/next.png\" alt=\"next\"></img>\n          </div>\n        </>\n      ) : (\n        <div className=\"stage\" onClick={() => submitFiles()}>\n          <img src=\"/icon/submit.png\" alt=\"next\"></img>\n        </div>\n      )} */}\n      <div className=\"stage\" onClick={() => submitFiles()}>\n        <img src=\"/icon/submit.png\" alt=\"next\"></img>\n      </div>\n    </StyledAudio>\n  );\n};\n\nexport default AudioRecord;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}