{"ast":null,"code":"var _jsxFileName = \"/Users/chae/Dev/VSCode/my-app/src/components/train/AudioRecord.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { AudioRecorder, useAudioRecorder } from \"react-audio-voice-recorder\";\nimport styled from \"styled-components\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\"; // react-speech-recognition 라이브러리 추가\nimport { scripts } from \"../../data/scripts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledAudio = styled.div`\n  position: relative;\n  height: 3000px;\n  .record {\n    img {\n      position: absolute;\n      left: 50%;\n      top: 40%;\n      transform: translateX(-50%) translateY(-50%);\n      width: 90px;\n      height: 90px;\n    }\n    /* .audio-recorder {\n      position: absolute;\n      left: 20%;\n      top: 40%;\n      transform: translateX(-50%) translateY(-50%);\n      width: 90px;\n      height: 90px;\n    }\n    .audio-recorder-mic {\n      width: 70px;\n      height: 70px;\n      background-color: rgb(222, 222, 222);\n      padding: 10px;\n    } */\n  }\n  .record-detail {\n    position: absolute;\n    left: 50%;\n    top: 70%;\n  }\n  .stage {\n    position: absolute;\n    left: 50%;\n    bottom: 0%;\n    transform: translateX(-50%);\n    img {\n      width: 223.68px;\n      height: 55.6px;\n    }\n    img:active {\n      transform: scale(0.9); /* 버튼을 작게 축소하는 효과를 줍니다. */\n    }\n  }\n`;\n_c = StyledAudio;\nconst AudioRecord = ({\n  stage,\n  setStage\n}) => {\n  _s();\n  const [recordedAudios, setRecordedAudios] = useState([]);\n  const recorderControls = useAudioRecorder();\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n  const [audioFile, setAudioFile] = useState();\n  const addAudio = blob => {\n    // const url = URL.createObjectURL(blob);\n    // const audio = document.createElement(\"audio\");\n    // audio.src = url;\n    // audio.controls = true;\n    // document.body.appendChild(audio);\n\n    const fileName = \"recorded_audio\" + stage + \".wav\";\n    if (blob) {\n      console.log(\"create file\");\n      //   const audioFile = blobToFile({ blob, fileName });\n      setAudioFile(blobToFile({\n        blob,\n        fileName\n      }));\n      //   setRecordedAudios((prevAudios) => [...prevAudios, audioFile]);\n    }\n  };\n\n  const blobToFile = ({\n    blob,\n    fileName\n  }) => {\n    const file = new File([blob], fileName, {\n      type: blob.type,\n      lastModified: Date.now()\n    });\n    return file;\n  };\n\n  // => 문제 : 말하다가 쉬면 그 다음 문장이 인식이 안됨...\n  const startChecking = () => {\n    // 녹음 시작\n    recorderControls.startRecording();\n\n    // STT 시작\n    resetTranscript(); // 이전 텍스트 초기화\n    SpeechRecognition.startListening(); // 음성 인식 시작\n\n    // //일정 시간 후에 음성 인식 결과를 확인하고 필요한 작업 수행\n    // setTimeout(() => {\n    //   setSttText(transcript);\n    //   console.log(\"음성 인식 결과:\", sttText);\n\n    //   // result에는 음성을 텍스트로 변환한 결과가 포함됩니다.\n    //   // 이 결과를 필요에 따라 처리할 수 있습니다.\n    // }, 5000); // 5초 후에 결과 확인 (원하는 시간으로 조절 가능)\n  };\n\n  // 두 문자열을 전처리하여 띄어쓰기와 문장 부호를 제거한 후 비교\n  function compareTexts({\n    transcript,\n    actualText\n  }) {\n    // 띄어쓰기와 문장 부호를 제거하고 모든 문자를 소문자로 변환\n    const cleanSttText = transcript.replace(/[\\s.,!?]/g, \"\").toLowerCase();\n    const cleanActualText = actualText.replace(/[\\s.,!?]/g, \"\").toLowerCase();\n\n    // 전처리한 문자열을 비교\n    return cleanSttText === cleanActualText;\n  }\n  const stopChecking = () => {\n    // STT 끝\n    SpeechRecognition.stopListening();\n    // 녹음 끝\n    recorderControls.stopRecording();\n    const actualText = scripts[stage];\n    console.log(\"transcript : \", transcript);\n    if (compareTexts({\n      transcript,\n      actualText\n    })) {\n      // 파일 저장\n      console.log(\"blob : \", recorderControls.recordingBlob);\n      addAudio(recorderControls.recordingBlob);\n    } else {\n      alert(\"정확한 발음으로 따라해주세요. 사용자의 음성 추출을 위해 중요한 과정이랍니다~\");\n    }\n  };\n\n  //   useEffect(() => {\n  //     if (recorderControls.isRecording) {\n  //       startChecking();\n  //     } else {\n  //       stopChecking();\n  //     }\n  //   }, [recorderControls.isRecording]);\n\n  const handleNextClick = () => {\n    console.log(stage);\n    if (stage < 9 && audioFile) {\n      setRecordedAudios(prevAudios => [...prevAudios, audioFile]);\n      setStage(stage + 1);\n      setAudioFile(undefined);\n    } else if (stage === 9) {\n      console.log(\"Submitting recorded audios to the server:\", recordedAudios);\n    }\n    console.log(\"recorded audios : \", recordedAudios);\n  };\n  return /*#__PURE__*/_jsxDEV(StyledAudio, {\n    children: [recorderControls.isRecording ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"record\",\n      onClick: () => stopChecking(),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icon/stop.png\",\n        alt: \"stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"record\",\n      onClick: () => startChecking(),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icon/mic.png\",\n        alt: \"mike\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"record-detail\",\n      children: /*#__PURE__*/_jsxDEV(AudioRecorder, {\n        onRecordingComplete: blob => addAudio(blob),\n        recorderControls: recorderControls\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), transcript, recorderControls.recordingTime, stage < 9 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stage\",\n      onClick: handleNextClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icon/next.png\",\n        alt: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stage\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icon/submit.png\",\n        alt: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecord, \"0d8NSgrMF4OCFaNZtP8U43EgBCE=\", false, function () {\n  return [useAudioRecorder, useSpeechRecognition];\n});\n_c2 = AudioRecord;\nexport default AudioRecord;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledAudio\");\n$RefreshReg$(_c2, \"AudioRecord\");","map":{"version":3,"names":["React","useState","AudioRecorder","useAudioRecorder","styled","SpeechRecognition","useSpeechRecognition","scripts","jsxDEV","_jsxDEV","StyledAudio","div","_c","AudioRecord","stage","setStage","_s","recordedAudios","setRecordedAudios","recorderControls","transcript","resetTranscript","audioFile","setAudioFile","addAudio","blob","fileName","console","log","blobToFile","file","File","type","lastModified","Date","now","startChecking","startRecording","startListening","compareTexts","actualText","cleanSttText","replace","toLowerCase","cleanActualText","stopChecking","stopListening","stopRecording","recordingBlob","alert","handleNextClick","prevAudios","undefined","children","isRecording","className","onClick","src","alt","_jsxFileName","lineNumber","columnNumber","onRecordingComplete","recordingTime","_c2","$RefreshReg$"],"sources":["/Users/chae/Dev/VSCode/my-app/src/components/train/AudioRecord.tsx"],"sourcesContent":["import React, { ReactNode, useEffect, useState } from \"react\";\nimport { AudioRecorder, useAudioRecorder } from \"react-audio-voice-recorder\";\nimport styled from \"styled-components\";\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\"; // react-speech-recognition 라이브러리 추가\nimport { scripts } from \"../../data/scripts\";\n\nconst StyledAudio = styled.div`\n  position: relative;\n  height: 3000px;\n  .record {\n    img {\n      position: absolute;\n      left: 50%;\n      top: 40%;\n      transform: translateX(-50%) translateY(-50%);\n      width: 90px;\n      height: 90px;\n    }\n    /* .audio-recorder {\n      position: absolute;\n      left: 20%;\n      top: 40%;\n      transform: translateX(-50%) translateY(-50%);\n      width: 90px;\n      height: 90px;\n    }\n    .audio-recorder-mic {\n      width: 70px;\n      height: 70px;\n      background-color: rgb(222, 222, 222);\n      padding: 10px;\n    } */\n  }\n  .record-detail {\n    position: absolute;\n    left: 50%;\n    top: 70%;\n  }\n  .stage {\n    position: absolute;\n    left: 50%;\n    bottom: 0%;\n    transform: translateX(-50%);\n    img {\n      width: 223.68px;\n      height: 55.6px;\n    }\n    img:active {\n      transform: scale(0.9); /* 버튼을 작게 축소하는 효과를 줍니다. */\n    }\n  }\n`;\nconst AudioRecord = ({\n  stage,\n  setStage,\n}: {\n  stage: number;\n  setStage: React.Dispatch<React.SetStateAction<number>>;\n}) => {\n  const [recordedAudios, setRecordedAudios] = useState<File[]>([]);\n  const recorderControls = useAudioRecorder();\n  const { transcript, resetTranscript } = useSpeechRecognition();\n  const [audioFile, setAudioFile] = useState<File>();\n\n  const addAudio = (blob: Blob | undefined) => {\n    // const url = URL.createObjectURL(blob);\n    // const audio = document.createElement(\"audio\");\n    // audio.src = url;\n    // audio.controls = true;\n    // document.body.appendChild(audio);\n\n    const fileName = \"recorded_audio\" + stage + \".wav\";\n\n    if (blob) {\n      console.log(\"create file\");\n      //   const audioFile = blobToFile({ blob, fileName });\n      setAudioFile(blobToFile({ blob, fileName }));\n      //   setRecordedAudios((prevAudios) => [...prevAudios, audioFile]);\n    }\n  };\n\n  const blobToFile = ({\n    blob,\n    fileName,\n  }: {\n    blob: Blob;\n    fileName: string;\n  }): File => {\n    const file = new File([blob], fileName, {\n      type: blob.type,\n      lastModified: Date.now(),\n    });\n    return file;\n  };\n\n  // => 문제 : 말하다가 쉬면 그 다음 문장이 인식이 안됨...\n  const startChecking = (): void => {\n    // 녹음 시작\n    recorderControls.startRecording();\n\n    // STT 시작\n    resetTranscript(); // 이전 텍스트 초기화\n    SpeechRecognition.startListening(); // 음성 인식 시작\n\n    // //일정 시간 후에 음성 인식 결과를 확인하고 필요한 작업 수행\n    // setTimeout(() => {\n    //   setSttText(transcript);\n    //   console.log(\"음성 인식 결과:\", sttText);\n\n    //   // result에는 음성을 텍스트로 변환한 결과가 포함됩니다.\n    //   // 이 결과를 필요에 따라 처리할 수 있습니다.\n    // }, 5000); // 5초 후에 결과 확인 (원하는 시간으로 조절 가능)\n  };\n\n  // 두 문자열을 전처리하여 띄어쓰기와 문장 부호를 제거한 후 비교\n  function compareTexts({\n    transcript,\n    actualText,\n  }: {\n    transcript: string;\n    actualText: string;\n  }) {\n    // 띄어쓰기와 문장 부호를 제거하고 모든 문자를 소문자로 변환\n    const cleanSttText = transcript.replace(/[\\s.,!?]/g, \"\").toLowerCase();\n    const cleanActualText = actualText.replace(/[\\s.,!?]/g, \"\").toLowerCase();\n\n    // 전처리한 문자열을 비교\n    return cleanSttText === cleanActualText;\n  }\n\n  const stopChecking = (): void => {\n    // STT 끝\n    SpeechRecognition.stopListening();\n    // 녹음 끝\n    recorderControls.stopRecording();\n\n    const actualText = scripts[stage];\n    console.log(\"transcript : \", transcript);\n    if (compareTexts({ transcript, actualText })) {\n      // 파일 저장\n      console.log(\"blob : \", recorderControls.recordingBlob);\n      addAudio(recorderControls.recordingBlob);\n    } else {\n      alert(\n        \"정확한 발음으로 따라해주세요. 사용자의 음성 추출을 위해 중요한 과정이랍니다~\"\n      );\n    }\n  };\n\n  //   useEffect(() => {\n  //     if (recorderControls.isRecording) {\n  //       startChecking();\n  //     } else {\n  //       stopChecking();\n  //     }\n  //   }, [recorderControls.isRecording]);\n\n  const handleNextClick = () => {\n    console.log(stage);\n    if (stage < 9 && audioFile) {\n      setRecordedAudios((prevAudios) => [...prevAudios, audioFile]);\n      setStage(stage + 1);\n      setAudioFile(undefined);\n    } else if (stage === 9) {\n      console.log(\"Submitting recorded audios to the server:\", recordedAudios);\n    }\n    console.log(\"recorded audios : \", recordedAudios);\n  };\n\n  return (\n    <StyledAudio>\n      {recorderControls.isRecording ? (\n        <div className=\"record\" onClick={() => stopChecking()}>\n          <img src=\"/icon/stop.png\" alt=\"stop\"></img>\n        </div>\n      ) : (\n        <div className=\"record\" onClick={() => startChecking()}>\n          <img src=\"/icon/mic.png\" alt=\"mike\"></img>\n        </div>\n      )}\n      <div className=\"record-detail\">\n        <AudioRecorder\n          onRecordingComplete={(blob) => addAudio(blob)}\n          recorderControls={recorderControls}\n        />\n      </div>\n      {transcript}\n      {recorderControls.recordingTime}\n      {/* <button onClick={recorderControls.stopRecording}>Stop recording</button> */}\n      {stage < 9 ? (\n        <div className=\"stage\" onClick={handleNextClick}>\n          <img src=\"/icon/next.png\" alt=\"next\"></img>\n        </div>\n      ) : (\n        <div className=\"stage\">\n          <img src=\"/icon/submit.png\" alt=\"next\"></img>\n        </div>\n      )}\n    </StyledAudio>\n  );\n};\n\nexport default AudioRecord;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA0BC,QAAQ,QAAQ,OAAO;AAC7D,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,4BAA4B;AAC5E,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,iBAAiB,IACtBC,oBAAoB,QACf,0BAA0B,CAAC,CAAC;AACnC,SAASC,OAAO,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGN,MAAM,CAACO,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GA7CIF,WAAW;AA8CjB,MAAMG,WAAW,GAAGA,CAAC;EACnBC,KAAK;EACLC;AAIF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAS,EAAE,CAAC;EAChE,MAAMkB,gBAAgB,GAAGhB,gBAAgB,CAAC,CAAC;EAC3C,MAAM;IAAEiB,UAAU;IAAEC;EAAgB,CAAC,GAAGf,oBAAoB,CAAC,CAAC;EAC9D,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAO,CAAC;EAElD,MAAMuB,QAAQ,GAAIC,IAAsB,IAAK;IAC3C;IACA;IACA;IACA;IACA;;IAEA,MAAMC,QAAQ,GAAG,gBAAgB,GAAGZ,KAAK,GAAG,MAAM;IAElD,IAAIW,IAAI,EAAE;MACRE,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1B;MACAL,YAAY,CAACM,UAAU,CAAC;QAAEJ,IAAI;QAAEC;MAAS,CAAC,CAAC,CAAC;MAC5C;IACF;EACF,CAAC;;EAED,MAAMG,UAAU,GAAGA,CAAC;IAClBJ,IAAI;IACJC;EAIF,CAAC,KAAW;IACV,MAAMI,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACN,IAAI,CAAC,EAAEC,QAAQ,EAAE;MACtCM,IAAI,EAAEP,IAAI,CAACO,IAAI;MACfC,YAAY,EAAEC,IAAI,CAACC,GAAG,CAAC;IACzB,CAAC,CAAC;IACF,OAAOL,IAAI;EACb,CAAC;;EAED;EACA,MAAMM,aAAa,GAAGA,CAAA,KAAY;IAChC;IACAjB,gBAAgB,CAACkB,cAAc,CAAC,CAAC;;IAEjC;IACAhB,eAAe,CAAC,CAAC,CAAC,CAAC;IACnBhB,iBAAiB,CAACiC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAEpC;IACA;IACA;IACA;;IAEA;IACA;IACA;EACF,CAAC;;EAED;EACA,SAASC,YAAYA,CAAC;IACpBnB,UAAU;IACVoB;EAIF,CAAC,EAAE;IACD;IACA,MAAMC,YAAY,GAAGrB,UAAU,CAACsB,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAACC,WAAW,CAAC,CAAC;IACtE,MAAMC,eAAe,GAAGJ,UAAU,CAACE,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAACC,WAAW,CAAC,CAAC;;IAEzE;IACA,OAAOF,YAAY,KAAKG,eAAe;EACzC;EAEA,MAAMC,YAAY,GAAGA,CAAA,KAAY;IAC/B;IACAxC,iBAAiB,CAACyC,aAAa,CAAC,CAAC;IACjC;IACA3B,gBAAgB,CAAC4B,aAAa,CAAC,CAAC;IAEhC,MAAMP,UAAU,GAAGjC,OAAO,CAACO,KAAK,CAAC;IACjCa,OAAO,CAACC,GAAG,CAAC,eAAe,EAAER,UAAU,CAAC;IACxC,IAAImB,YAAY,CAAC;MAAEnB,UAAU;MAAEoB;IAAW,CAAC,CAAC,EAAE;MAC5C;MACAb,OAAO,CAACC,GAAG,CAAC,SAAS,EAAET,gBAAgB,CAAC6B,aAAa,CAAC;MACtDxB,QAAQ,CAACL,gBAAgB,CAAC6B,aAAa,CAAC;IAC1C,CAAC,MAAM;MACLC,KAAK,CACH,6CACF,CAAC;IACH;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BvB,OAAO,CAACC,GAAG,CAACd,KAAK,CAAC;IAClB,IAAIA,KAAK,GAAG,CAAC,IAAIQ,SAAS,EAAE;MAC1BJ,iBAAiB,CAAEiC,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAE7B,SAAS,CAAC,CAAC;MAC7DP,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;MACnBS,YAAY,CAAC6B,SAAS,CAAC;IACzB,CAAC,MAAM,IAAItC,KAAK,KAAK,CAAC,EAAE;MACtBa,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAEX,cAAc,CAAC;IAC1E;IACAU,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEX,cAAc,CAAC;EACnD,CAAC;EAED,oBACER,OAAA,CAACC,WAAW;IAAA2C,QAAA,GACTlC,gBAAgB,CAACmC,WAAW,gBAC3B7C,OAAA;MAAK8C,SAAS,EAAC,QAAQ;MAACC,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAAC,CAAE;MAAAQ,QAAA,eACpD5C,OAAA;QAAKgD,GAAG,EAAC,gBAAgB;QAACC,GAAG,EAAC;MAAM;QAAAhC,QAAA,EAAAiC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAnC,QAAA,EAAAiC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,gBAENpD,OAAA;MAAK8C,SAAS,EAAC,QAAQ;MAACC,OAAO,EAAEA,CAAA,KAAMpB,aAAa,CAAC,CAAE;MAAAiB,QAAA,eACrD5C,OAAA;QAAKgD,GAAG,EAAC,eAAe;QAACC,GAAG,EAAC;MAAM;QAAAhC,QAAA,EAAAiC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAnC,QAAA,EAAAiC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACN,eACDpD,OAAA;MAAK8C,SAAS,EAAC,eAAe;MAAAF,QAAA,eAC5B5C,OAAA,CAACP,aAAa;QACZ4D,mBAAmB,EAAGrC,IAAI,IAAKD,QAAQ,CAACC,IAAI,CAAE;QAC9CN,gBAAgB,EAAEA;MAAiB;QAAAO,QAAA,EAAAiC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC;IAAC;MAAAnC,QAAA,EAAAiC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLzC,UAAU,EACVD,gBAAgB,CAAC4C,aAAa,EAE9BjD,KAAK,GAAG,CAAC,gBACRL,OAAA;MAAK8C,SAAS,EAAC,OAAO;MAACC,OAAO,EAAEN,eAAgB;MAAAG,QAAA,eAC9C5C,OAAA;QAAKgD,GAAG,EAAC,gBAAgB;QAACC,GAAG,EAAC;MAAM;QAAAhC,QAAA,EAAAiC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAnC,QAAA,EAAAiC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,gBAENpD,OAAA;MAAK8C,SAAS,EAAC,OAAO;MAAAF,QAAA,eACpB5C,OAAA;QAAKgD,GAAG,EAAC,kBAAkB;QAACC,GAAG,EAAC;MAAM;QAAAhC,QAAA,EAAAiC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAnC,QAAA,EAAAiC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACN;EAAA;IAAAnC,QAAA,EAAAiC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAElB,CAAC;AAAC7C,EAAA,CApJIH,WAAW;EAAA,QAQUV,gBAAgB,EACDG,oBAAoB;AAAA;AAAA0D,GAAA,GATxDnD,WAAW;AAsJjB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAoD,GAAA;AAAAC,YAAA,CAAArD,EAAA;AAAAqD,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}