{"ast":null,"code":"var _jsxFileName = \"/Users/chae/Dev/VSCode/my-app/src/components/train/AudioRecord.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { AudioRecorder, useAudioRecorder } from \"react-audio-voice-recorder\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledAudio = styled.div`\n  position: relative;\n  height: 150px;\n  .record {\n    .audio-recorder {\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translateX(-50%) translateY(-50%);\n      width: 90px;\n      height: 90px;\n      img {\n        width: 70px;\n        height: 70px;\n        background-color: rgb(222, 222, 222);\n        padding: 10px;\n      }\n    }\n  }\n  .stage {\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    img {\n      width: 223.68px;\n      height: 46.6px;\n    }\n    img:active {\n      transform: scale(0.9); /* 버튼을 작게 축소하는 효과를 줍니다. */\n    }\n  }\n`;\n_c = StyledAudio;\nconst AudioRecord = ({\n  stage,\n  setStage\n}) => {\n  _s();\n  const [recordedAudios, setRecordedAudios] = useState([]);\n  const recorderControls = useAudioRecorder();\n  const addAudioElement = blob => {\n    // const url = URL.createObjectURL(blob);\n    // const audio = document.createElement(\"audio\");\n    // audio.src = url;\n    // audio.controls = true;\n    // document.body.appendChild(audio);\n\n    const fileName = \"recorded_audio\" + stage + \".wav\";\n    const audioFile = blobToFile({\n      blob,\n      fileName\n    });\n    setRecordedAudios(prevAudios => [...prevAudios, audioFile]);\n  };\n  const blobToFile = ({\n    blob,\n    fileName\n  }) => {\n    const file = new File([blob], fileName, {\n      type: blob.type,\n      lastModified: Date.now()\n    });\n    return file;\n  };\n  const handleNextClick = () => {\n    if (stage < 9 && recordedAudios.length === stage + 1) {\n      setStage(stage + 1);\n    } else if (stage === 9) {\n      console.log(\"Submitting recorded audios to the server:\", recordedAudios);\n    }\n    console.log(\"recorded audios : \", recordedAudios);\n  };\n  return /*#__PURE__*/_jsxDEV(StyledAudio, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"record\",\n      children: /*#__PURE__*/_jsxDEV(AudioRecorder, {\n        onRecordingComplete: blob => addAudioElement(blob),\n        recorderControls: recorderControls\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), stage < 9 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stage\",\n      onClick: handleNextClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icon/next.png\",\n        alt: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stage\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icon/submit.png\",\n        alt: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecord, \"t4kf6vPJ1mVrboFIwEOUts5IBu8=\", false, function () {\n  return [useAudioRecorder];\n});\n_c2 = AudioRecord;\nexport default AudioRecord;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledAudio\");\n$RefreshReg$(_c2, \"AudioRecord\");","map":{"version":3,"names":["React","useState","AudioRecorder","useAudioRecorder","styled","jsxDEV","_jsxDEV","StyledAudio","div","_c","AudioRecord","stage","setStage","_s","recordedAudios","setRecordedAudios","recorderControls","addAudioElement","blob","fileName","audioFile","blobToFile","prevAudios","file","File","type","lastModified","Date","now","handleNextClick","length","console","log","children","className","onRecordingComplete","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c2","$RefreshReg$"],"sources":["/Users/chae/Dev/VSCode/my-app/src/components/train/AudioRecord.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { AudioRecorder, useAudioRecorder } from \"react-audio-voice-recorder\";\nimport styled from \"styled-components\";\n\nconst StyledAudio = styled.div`\n  position: relative;\n  height: 150px;\n  .record {\n    .audio-recorder {\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translateX(-50%) translateY(-50%);\n      width: 90px;\n      height: 90px;\n      img {\n        width: 70px;\n        height: 70px;\n        background-color: rgb(222, 222, 222);\n        padding: 10px;\n      }\n    }\n  }\n  .stage {\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    img {\n      width: 223.68px;\n      height: 46.6px;\n    }\n    img:active {\n      transform: scale(0.9); /* 버튼을 작게 축소하는 효과를 줍니다. */\n    }\n  }\n`;\nconst AudioRecord = ({\n  stage,\n  setStage,\n}: {\n  stage: number;\n  setStage: React.Dispatch<React.SetStateAction<number>>;\n}) => {\n  const [recordedAudios, setRecordedAudios] = useState<File[]>([]);\n  const recorderControls = useAudioRecorder();\n\n  const addAudioElement = (blob: Blob) => {\n    // const url = URL.createObjectURL(blob);\n    // const audio = document.createElement(\"audio\");\n    // audio.src = url;\n    // audio.controls = true;\n    // document.body.appendChild(audio);\n\n    const fileName = \"recorded_audio\" + stage + \".wav\";\n    const audioFile = blobToFile({ blob, fileName });\n    setRecordedAudios((prevAudios) => [...prevAudios, audioFile]);\n  };\n\n  const blobToFile = ({\n    blob,\n    fileName,\n  }: {\n    blob: Blob;\n    fileName: string;\n  }): File => {\n    const file = new File([blob], fileName, {\n      type: blob.type,\n      lastModified: Date.now(),\n    });\n    return file;\n  };\n\n  const handleNextClick = () => {\n    if (stage < 9 && recordedAudios.length === stage + 1) {\n      setStage(stage + 1);\n    } else if (stage === 9) {\n      console.log(\"Submitting recorded audios to the server:\", recordedAudios);\n    }\n    console.log(\"recorded audios : \", recordedAudios);\n  };\n\n  return (\n    <StyledAudio>\n      <div className=\"record\">\n        <AudioRecorder\n          onRecordingComplete={(blob) => addAudioElement(blob)}\n          recorderControls={recorderControls}\n        />\n      </div>\n      {/* <button onClick={recorderControls.stopRecording}>Stop recording</button> */}\n      {stage < 9 ? (\n        <div className=\"stage\" onClick={handleNextClick}>\n          <img src=\"/icon/next.png\" alt=\"next\"></img>\n        </div>\n      ) : (\n        <div className=\"stage\">\n          <img src=\"/icon/submit.png\" alt=\"next\"></img>\n        </div>\n      )}\n    </StyledAudio>\n  );\n};\n\nexport default AudioRecord;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,4BAA4B;AAC5E,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,GAAGH,MAAM,CAACI,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GA/BIF,WAAW;AAgCjB,MAAMG,WAAW,GAAGA,CAAC;EACnBC,KAAK;EACLC;AAIF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC;EAChE,MAAMe,gBAAgB,GAAGb,gBAAgB,CAAC,CAAC;EAE3C,MAAMc,eAAe,GAAIC,IAAU,IAAK;IACtC;IACA;IACA;IACA;IACA;;IAEA,MAAMC,QAAQ,GAAG,gBAAgB,GAAGR,KAAK,GAAG,MAAM;IAClD,MAAMS,SAAS,GAAGC,UAAU,CAAC;MAAEH,IAAI;MAAEC;IAAS,CAAC,CAAC;IAChDJ,iBAAiB,CAAEO,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAEF,SAAS,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAC;IAClBH,IAAI;IACJC;EAIF,CAAC,KAAW;IACV,MAAMI,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACN,IAAI,CAAC,EAAEC,QAAQ,EAAE;MACtCM,IAAI,EAAEP,IAAI,CAACO,IAAI;MACfC,YAAY,EAAEC,IAAI,CAACC,GAAG,CAAC;IACzB,CAAC,CAAC;IACF,OAAOL,IAAI;EACb,CAAC;EAED,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIlB,KAAK,GAAG,CAAC,IAAIG,cAAc,CAACgB,MAAM,KAAKnB,KAAK,GAAG,CAAC,EAAE;MACpDC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB,CAAC,MAAM,IAAIA,KAAK,KAAK,CAAC,EAAE;MACtBoB,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAElB,cAAc,CAAC;IAC1E;IACAiB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAElB,cAAc,CAAC;EACnD,CAAC;EAED,oBACER,OAAA,CAACC,WAAW;IAAA0B,QAAA,gBACV3B,OAAA;MAAK4B,SAAS,EAAC,QAAQ;MAAAD,QAAA,eACrB3B,OAAA,CAACJ,aAAa;QACZiC,mBAAmB,EAAGjB,IAAI,IAAKD,eAAe,CAACC,IAAI,CAAE;QACrDF,gBAAgB,EAAEA;MAAiB;QAAAG,QAAA,EAAAiB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC;IAAC;MAAAnB,QAAA,EAAAiB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAEL3B,KAAK,GAAG,CAAC,gBACRL,OAAA;MAAK4B,SAAS,EAAC,OAAO;MAACK,OAAO,EAAEV,eAAgB;MAAAI,QAAA,eAC9C3B,OAAA;QAAKkC,GAAG,EAAC,gBAAgB;QAACC,GAAG,EAAC;MAAM;QAAAtB,QAAA,EAAAiB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAnB,QAAA,EAAAiB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,gBAENhC,OAAA;MAAK4B,SAAS,EAAC,OAAO;MAAAD,QAAA,eACpB3B,OAAA;QAAKkC,GAAG,EAAC,kBAAkB;QAACC,GAAG,EAAC;MAAM;QAAAtB,QAAA,EAAAiB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAnB,QAAA,EAAAiB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACN;EAAA;IAAAnB,QAAA,EAAAiB,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAElB,CAAC;AAACzB,EAAA,CAjEIH,WAAW;EAAA,QAQUP,gBAAgB;AAAA;AAAAuC,GAAA,GARrChC,WAAW;AAmEjB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAiC,GAAA;AAAAC,YAAA,CAAAlC,EAAA;AAAAkC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}